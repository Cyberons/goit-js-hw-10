{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst showDays = document.querySelector('[data-days]');\nconst showHours = document.querySelector('[data-hours]');\nconst showMinutes = document.querySelector('[data-minutes]');\nconst showSeconds = document.querySelector('[data-seconds]');\nconst inputfield = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\n\nlet delta = 0;\nlet intervalId;\n\nconst options = {\n  dateFormat: \"Y-m-d\",\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userDate = new Date(selectedDates[0]).getTime();\n    const startDate = Date.now();\n\n    if (userDate > startDate) {\n      startBtn.disabled = false;\n      delta = userDate - startDate;\n      updateClockface(convertMs(delta));\n      startTimer();\n    } else {\n      iziToast.error({\n        fontSize: 'large',\n        close: false,\n        position: 'topRight',\n        messageColor: 'white',\n        timeout: 2000,\n        backgroundColor: 'red',\n        message: (\"Please choose a date in the future\")\n      });\n    }\n  }\n};\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  showDays.textContent = `${days}`;\n  showHours.textContent = `${hours}`;\n  showMinutes.textContent = `${minutes}`;\n  showSeconds.textContent = `${seconds}`;\n}\n\nfunction startTimer() {\n  clearInterval(intervalId);\n  intervalId = setInterval(timer, 1000);\n}\n\nfunction timer() {\n  if (delta > 0) {\n    delta -= 1000;\n    updateClockface(convertMs(delta));\n  } else {\n    clearInterval(intervalId);\n    startBtn.disabled = false;\n    inputfield.disabled = false;\n  }\n}\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(time) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(time / day);\n  const hours = Math.floor((time % day) / hour);\n  const minutes = Math.floor(((time % day) % hour) / minute);\n  const seconds = Math.floor((((time % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  inputfield.disabled = true;\n  startTimer();\n});"],"names":["showDays","showHours","showMinutes","showSeconds","inputfield","startBtn","delta","intervalId","options","selectedDates","userDate","startDate","updateClockface","convertMs","startTimer","iziToast","days","hours","minutes","seconds","timer","flatpickr","time"],"mappings":"2FAKA,MAAMA,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,cAAc,EAEtD,IAAIC,EAAQ,EACRC,EAEJ,MAAMC,EAAU,CACd,WAAY,QACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAW,IAAI,KAAKD,EAAc,CAAC,CAAC,EAAE,UACtCE,EAAY,KAAK,MAEnBD,EAAWC,GACbN,EAAS,SAAW,GACpBC,EAAQI,EAAWC,EACnBC,EAAgBC,EAAUP,CAAK,CAAC,EAChCQ,KAEAC,EAAS,MAAM,CACb,SAAU,QACV,MAAO,GACP,SAAU,WACV,aAAc,QACd,QAAS,IACT,gBAAiB,MACjB,QAAU,oCAClB,CAAO,CAEJ,CACH,EAEA,SAASH,EAAgB,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DnB,EAAS,YAAc,GAAGgB,CAAI,GAC9Bf,EAAU,YAAc,GAAGgB,CAAK,GAChCf,EAAY,YAAc,GAAGgB,CAAO,GACpCf,EAAY,YAAc,GAAGgB,CAAO,EACtC,CAEA,SAASL,GAAa,CACpB,cAAcP,CAAU,EACxBA,EAAa,YAAYa,EAAO,GAAI,CACtC,CAEA,SAASA,GAAQ,CACXd,EAAQ,GACVA,GAAS,IACTM,EAAgBC,EAAUP,CAAK,CAAC,IAEhC,cAAcC,CAAU,EACxBF,EAAS,SAAW,GACpBD,EAAW,SAAW,GAE1B,CAEAiB,EAAU,mBAAoBb,CAAO,EAErC,SAASK,EAAUS,EAAM,CAMvB,MAAMN,EAAO,KAAK,MAAMM,EAAO,KAAG,EAC5BL,EAAQ,KAAK,MAAOK,EAAO,MAAO,IAAI,EACtCJ,EAAU,KAAK,MAAQI,EAAO,MAAO,KAAQ,GAAM,EACnDH,EAAU,KAAK,MAASG,EAAO,MAAO,KAAQ,IAAU,GAAM,EAEpE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAd,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAW,SAAW,GACtBU,GACF,CAAC"}